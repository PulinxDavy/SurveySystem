@using System.Activities.Expressions
@model SurveySystem.ViewModels.QuestionVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Question.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Question.QuestionString, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question.QuestionString, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Question.QuestionString, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionTypes, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Question.Type, Model.QuestionTypeItems, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Question.Type, "", new {@class = "text-danger"})
            </div>
        </div>

        @if (Model.Question.Type == "AppreciationQ")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.AppreciationTypes, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Question.Type, Model.AppreciationTypeItems, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Question.Type, "", new {@class = "text-danger"})
                </div>
            </div>
        }
        else if (Model.Question.Type == "MultipleValues")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Question.Answer, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.Label("Multiple Values are possible, spereate the values with ';'.", new {htmlAttributes = new {@class = "text-info"}})
                    @Html.EditorFor(model => model.Question.Answer, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Question.Answer, "", new {@class = "text-danger"})
                </div>
            </div>
        }


    </div>
}