@using System.Activities.Expressions
@model SurveySystem.ViewModels.QuestionVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionString, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionString, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.QuestionString, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionTypes, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeOfQuestion, Model.QuestionTypeItems, new {@class = "form-control", @id = "QDropDownList"})
                @Html.ValidationMessageFor(model => model.TypeOfQuestion, "", new {@class = "text-danger"})
            </div>
        </div>

        <div id="appreciate" class="form-group">
            @Html.LabelFor(model => model.AppreciationTypes, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeOfAppreciation, Model.AppreciationTypeItems, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.TypeOfAppreciation, "", new {@class = "text-danger"})
            </div>
        </div>

        <div id="info" class="form-group">
            <div class="col-md-2"></div>
            <span class="text-info col-md-10">The possible answers can be multiple values, seperate them with a ';'.</span>
        </div>

        <div class="form-group" id="multiple">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Answer, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            showOnChange();
            $("#QDropDownList").change(showOnChange);
        });

        function showOnChange() {
            if (document.getElementById("QDropDownList").value === "Appreciation") {
                $("#appreciate").show();
                $("#multiple").hide();
                $("#info").hide();
            }
             else if (document.getElementById("QDropDownList").value === "OpenEnd") {
                $("#appreciate").hide();
                $("#multiple").hide();
                $("#info").hide();
            } else {
                $("#appreciate").hide();
                $("#multiple").show();
                $("#info").show();
            }
        }
    </script>
}