@model SurveySystem.ViewModels.SurveyVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Survey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Active, htmlAttributes: new { @class = "form-control col-md-1" })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedGroups, htmlAttributes: new {@class = "control-label col-md-2"})            
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedGroups, Model.SelectedGroups, htmlAttributes: new {@class = "form-control", @id = "selectedGroupsList"})
                @Html.ValidationMessageFor(model => model.SelectedGroups, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3"></div>
            <button type="button" id="groupUp" class="btn btn-default"><span class="glyphicon glyphicon-chevron-up"></span></button>
            <button type="button" id="groupDown" class="btn btn-default"><span class="glyphicon glyphicon-chevron-down"></span></button>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllGroups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.Groups, Model.Groups, htmlAttributes: new { @class = "form-control", @id = "allGroupsList" })
                @Html.ValidationMessageFor(model => model.Groups, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedQuestions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedQuestions, Model.SelectedQuestions, htmlAttributes: new { @class = "form-control", @id = "selectedQuestionsList" })
                @Html.ValidationMessageFor(model => model.SelectedQuestions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3"></div>
            <button type="button" id="questionUp" class="btn btn-default"><span class="glyphicon glyphicon-chevron-up"></span></button>
            <button type="button" id="questionDown" class="btn btn-default"><span class="glyphicon glyphicon-chevron-down"></span></button>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllQuestions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.Questions, Model.Questions, htmlAttributes: new { @class = "form-control", @id = "allQuestionsList" })
                @Html.ValidationMessageFor(model => model.Questions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    <script>
        var btnGrUp = document.getElementById("groupUp");
        var btnGrDwn = document.getElementById("groupDown");
        var btnQuUp = document.getElementById("questionUp");
        var btnQuDwn = document.getElementById("questionDown");

        btnGrUp.addEventListener('click', function() {
            var selected = $("#selectedGroupsList option:selected");
            $("#allGroupsList").append(selected);
        });
    </script>
}